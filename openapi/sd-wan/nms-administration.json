{
  "openapi": "3.0.3",
  "info": {
    "title": "Cisco SD-WAN vManage API - vManage Management Part",
    "description": "The vManage API exposes the functionality of operations maintaining devices and the overlay network",
    "contact": {
      "email": "vmanage-api@cisco.com"
    },
    "license": {
      "name": "Commercial License",
      "url": "https://www.cisco.com/c/en/us/solutions/enterprise-networks/sd-wan/index.html"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "/dataservice"
    }
  ],
  "paths": {
    "/admin/cologroup": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get COLO groups",
        "operationId": "getColoGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Colocation groups": {
                    "description": "Colocation groups",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Add COLO group",
        "operationId": "createColoGroup",
        "requestBody": {
          "description": "Colocation group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Colocation group": {
                  "description": "Colocation group",
                  "value": {
                    "rbacRequired": true,
                    "userGroupName": "usergrp1",
                    "name": "cologrp1",
                    "description": "Colocation Group One"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/cologroup/{id}": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update COLO group",
        "operationId": "editColoGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Colocation group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Colocation group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Colocation group": {
                  "description": "Colocation group",
                  "value": {
                    "rbacRequired": true,
                    "userGroupName": "usergrp1",
                    "name": "cologrp2",
                    "description": "Colocation Group Two",
                    "coloGroupId": "f02e27c3-b30b-4425-93a3-e0c0207f8c23"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Delete COLO group",
        "operationId": "deleteColoGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Colocation group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get all users",
        "operationId": "findUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "User": {
                    "description": "User",
                    "value": []
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Create a user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User": {
                  "description": "User",
                  "value": {
                    "group": [
                      "demogrp"
                    ],
                    "description": "Demo User",
                    "userName": "demouser",
                    "password": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/activeSessions": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get active sessions",
        "operationId": "getActiveSessions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "All active sessions for this tenant (except for the requesting session)": {
                    "description": "All active sessions for this tenant (except for the requesting session)",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/password/validate": {
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Validate user password",
        "operationId": "validatePassword",
        "requestBody": {
          "description": "User password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User password": {
                  "description": "User password",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/password/{userName}": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update user password",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User": {
                  "description": "User",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/profile/password": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update profile password",
        "operationId": "updateProfilePassword",
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User": {
                  "description": "User",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/removeSessions": {
      "delete": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Remove sessions",
        "operationId": "removeSessions",
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "examples": {
                "List of sessions": {
                  "description": "List of sessions",
                  "value": []
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/reset": {
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Unlock a user",
        "operationId": "resetUser",
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User": {
                  "description": "User",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/role": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Check whether a user has admin role",
        "operationId": "findUserRole",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "User has admin role": {
                    "description": "User has admin role",
                    "value": "{isAdmin: true}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/userAuthType": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Find user authentication type, whether it is SAML enabled",
        "operationId": "findUserAuthType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "User authentication type": {
                    "description": "User authentication type",
                    "value": "{userAuthType: SAML}"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/user/{userName}": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User": {
                  "description": "User",
                  "value": {
                    "userName": "demouser",
                    "password": "newpasswd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/usergroup": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get all user groups",
        "operationId": "findUserGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "User groups": {
                    "description": "User groups",
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Create user group",
        "operationId": "createUserGroup",
        "requestBody": {
          "description": "User group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User group": {
                  "description": "User group",
                  "value": {
                    "groupName": "demogrp",
                    "tasks": [
                      {
                        "feature": "Interface",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Routing",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Security",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "System",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Policy",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Alarms",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Audit Log",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Device Monitoring",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "RBAC VPN",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Certificates",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Device Inventory",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Template Configuration",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Template Deploy",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Policy Configuration",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Security Policy Configuration",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Policy Deploy",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Cloud OnRamp",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Software Upgrade",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Device Reboot",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Manage Users",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Tools",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Settings",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Cluster",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Colocation",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "vAnalytics",
                        "read": true,
                        "enabled": true,
                        "write": true
                      },
                      {
                        "feature": "Events",
                        "read": true,
                        "enabled": true,
                        "write": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/usergroup/definition": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get user groups in a grid table",
        "operationId": "createGroupGridColumns",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "User group in grid table": {
                    "description": "User group in grid table",
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/usergroup/keyvalue": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get user groups as key value map",
        "operationId": "findUserGroupsAsKeyValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Map of user groups": {
                    "description": "Map of user groups",
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/usergroup/{userGroupId}": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update user group",
        "operationId": "updateUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "description": "User group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User group": {
                  "description": "User group",
                  "value": {
                    "groupName": "demogrp",
                    "tasks": [
                      {
                        "feature": "Policy",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Routing",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Security",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Interface",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "System",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Alarms",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Audit Log",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Certificates",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Cloud OnRamp",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Cluster",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Colocation",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Device Inventory",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Device Monitoring",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Device Reboot",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Events",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Manage Users",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Policy Configuration",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Policy Deploy",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "RBAC VPN",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Security Policy Configuration",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Settings",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Software Upgrade",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Template Configuration",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Template Deploy",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "Tools",
                        "enabled": true,
                        "read": true,
                        "write": false
                      },
                      {
                        "feature": "vAnalytics",
                        "enabled": true,
                        "read": true,
                        "write": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Delete user group",
        "operationId": "deleteUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "description": "User group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/vpngroup": {
      "get": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Get VPN groups",
        "operationId": "getVpnGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "VPN groups": {
                    "description": "VPN groups",
                    "value": {
                      "data": [
                        {
                          "name": "VPNGroup",
                          "vpnGroupId": "34bb9532-60bd-464b-bb35-393f7bac5e56",
                          "description": "Sample",
                          "owner": "admin",
                          "lastUpdated": 1590190679126,
                          "segments": [
                            "c952c18b-30b3-4f0b-b985-494693d7adfb"
                          ],
                          "hasRbacGroup": true,
                          "userGroupName": "demo"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Add VPN group",
        "operationId": "createVpnGroup",
        "requestBody": {
          "description": "VPN group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "VPN group": {
                  "description": "VPN group",
                  "value": {
                    "rbacRequired": true,
                    "userGroupName": "demo",
                    "name": "VPNGroup",
                    "description": "Sample",
                    "segments": [
                      "c952c18b-30b3-4f0b-b985-494693d7adfb"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/vpngroup/{id}": {
      "put": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Update VPN group",
        "operationId": "editVpnGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VPN group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "VPN group",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "VPN group": {
                  "description": "VPN group",
                  "value": {
                    "rbacRequired": true,
                    "userGroupName": "demo",
                    "name": "VPNGroup",
                    "description": "Sample",
                    "vpnGroupId": "34bb9532-60bd-464b-bb35-393f7bac5e56",
                    "segments": [
                      "c952c18b-30b3-4f0b-b985-494693d7adfb",
                      "64b30b74-08e2-4b4b-81ca-d019c7e452d5"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Administration - User and Group"
        ],
        "description": "Delete VPN group",
        "operationId": "deleteVpnGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VPN group Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get stat raw data",
        "operationId": "getStatDataRawData",
        "parameters": [
          {
            "name": "inputQuery",
            "in": "query",
            "description": "Query filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get raw property data with post action",
        "operationId": "getPostStatDataRawData",
        "requestBody": {
          "description": "Query filter for getting stat raw data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/aggregation": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get raw property data aggregated",
        "operationId": "getAggregationData",
        "parameters": [
          {
            "name": "inputQuery",
            "in": "query",
            "description": "Query filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get raw property data aggregated with post action",
        "operationId": "getPostAggregationData",
        "requestBody": {
          "description": "Query filter for getting stat raw data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/doccount": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get response count of a query",
        "operationId": "getCount",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": {
              "query": {
                "field": "latency",
                "type": "long",
                "value": [
                  "1"
                ],
                "operator": "greater"
              },
              "fields": [
                "latency"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Query result count": {
                    "description": "Query result count",
                    "value": {
                      "count": 9642
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get response count of a query",
        "operationId": "getCountPost",
        "requestBody": {
          "description": "Query",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Query": {
                  "description": "Query",
                  "value": {
                    "query": {
                      "field": "latency",
                      "type": "long",
                      "value": [
                        "1"
                      ],
                      "operator": "greater"
                    },
                    "fields": [
                      "latency"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Query result count": {
                    "description": "Query result count",
                    "value": {
                      "count": 9642
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/fields": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get fields and type",
        "operationId": "getStatDataFields",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/page": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get raw property data in bulk",
        "operationId": "getStatBulkRawData",
        "parameters": [
          {
            "name": "inputQuery",
            "in": "query",
            "description": "Query filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scrollId",
            "in": "query",
            "description": "Offset of the query result",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "size of the query result",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get raw property data in bulk with post action",
        "operationId": "getPostStatBulkRawData",
        "parameters": [
          {
            "name": "scrollId",
            "in": "query",
            "description": "Offset of the query result",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Size of the query result",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Query filter for getting stat raw data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Raw property data": {
                    "description": "Raw property data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/query/fields": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get query fields",
        "operationId": "getStatQueryFields",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Query result count": {
                    "description": "Query result count",
                    "value": {
                      "data": [
                        {
                          "property": "entry_time",
                          "name": "Event Time",
                          "isRequired": true,
                          "dataType": "date",
                          "fieldData": {
                            "type": "dateList"
                          },
                          "options": [
                            {
                              "key": "last_1_hour",
                              "value": "Last 1 hour",
                              "number": "1",
                              "enableDateFields": false
                            },
                            {
                              "key": "last_3_hours",
                              "value": "Last 3 hours",
                              "number": "3",
                              "enableDateFields": false
                            },
                            {
                              "key": "last_6_hours",
                              "value": "Last 6 hours",
                              "number": "6",
                              "enableDateFields": false
                            },
                            {
                              "key": "last_12_hours",
                              "value": "Last 12 hours",
                              "number": "12",
                              "enableDateFields": false
                            },
                            {
                              "key": "last_24_hours",
                              "value": "Last 24 hours",
                              "number": "24",
                              "enableDateFields": false,
                              "isSelected": true
                            },
                            {
                              "key": "last_168_hours",
                              "value": "Last 7 days",
                              "number": "168",
                              "enableDateFields": false
                            },
                            {
                              "key": "custom",
                              "value": "Custom",
                              "enableDateFields": true
                            }
                          ]
                        },
                        {
                          "property": "vdevice_name",
                          "name": "Device name",
                          "isRequired": true,
                          "multiSelect": false,
                          "dataType": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/severity": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get audit logs for last 3 hours",
        "operationId": "generateAuditLog",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Audit log": {
                    "description": "Audit log",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auditlog/severity/summary": {
      "get": {
        "tags": [
          "Administration - Audit Log"
        ],
        "description": "Get audit log severity histogram",
        "operationId": "getAuditSeverityCustomHistogram",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Audit log severity histogram": {
                    "description": "Audit log severity histogram",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/certificate/vmanage/selfsignedcert": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "get self signed certificate",
        "operationId": "getSelfSignedCert",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Self signed certificate": {
                    "description": "Self signed certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cloudservices/accesstoken": {
      "get": {
        "tags": [
          "System - Cloud Service"
        ],
        "operationId": "getAccessTokenforDevice",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/clusterManagement/clusterLocked": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Check whether cluster is locked",
        "operationId": "checkIfClusterLocked",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cluster lock": {
                    "description": "Cluster lock",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/configure": {
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Configure vManage",
        "operationId": "configureVmanage",
        "requestBody": {
          "description": "vManage server config",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage server config": {
                  "description": "vManage server config",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/connectedDevices/{vmanageIP}": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get connected device for vManage",
        "operationId": "getConnectedDevices",
        "parameters": [
          {
            "name": "vmanageIP",
            "in": "path",
            "description": "vManage IP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Devices": {
                    "description": "Devices",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/enableSDAVC": {
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Enable SDAVC",
        "operationId": "enableSDAVC",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/health/details": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get cluster health check details",
        "operationId": "healthDetails",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cluster health check detail": {
                    "description": "Cluster health check detail",
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/health/status": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get cluster health check details",
        "operationId": "healthStatusInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cluster health status info": {
                    "description": "Cluster health status info",
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/health/summary": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get cluster health check summary",
        "operationId": "healthSummary",
        "parameters": [
          {
            "name": "isCached",
            "in": "query",
            "description": "Flag to enable cached result",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cluster health check summary": {
                    "description": "Cluster health check summary",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/iplist/{vmanageID}": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get configured IP addresses",
        "operationId": "getConfiguredIPList",
        "parameters": [
          {
            "name": "vmanageID",
            "in": "path",
            "description": "vManage Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "vManage IP list": {
                    "description": "vManage IP list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/isready": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Is cluster ready",
        "operationId": "isClusterReady",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cluster state": {
                    "description": "Cluster state",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/list": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "List vManages in the cluster",
        "operationId": "listVmanages",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "vManage server": {
                    "description": "vManage server",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/nodeProperties": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get properties of vManage being added to  cluster",
        "operationId": "nodeProperties",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage cluster properties": {
                    "description": "vManage cluster properties",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/remove": {
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Remove vManage from cluster",
        "operationId": "removeVmanage",
        "requestBody": {
          "description": "vManage server info",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage server info": {
                  "description": "vManage server info",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/replicateAndRebalance": {
      "put": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Initiate replication and rebalance of kafka topics",
        "operationId": "performReplicationAndRebalanceOfKafkaPartitions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Kafka topics rebalance status": {
                    "description": "Kafka topics rebalance status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/resetSDAVC": {
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Reset SDAVC node",
        "operationId": "resetSDAVCNode",
        "requestBody": {
          "description": "SDAVC node",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "SDAVC node": {
                  "description": "SDAVC node",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/setup": {
      "put": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Update vManage cluster info",
        "operationId": "editVmanage",
        "requestBody": {
          "description": "vManage cluster config",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage cluster config": {
                  "description": "vManage cluster config",
                  "value": {
                    "vmanageID": "0",
                    "deviceIP": "10.0.1.32",
                    "username": "admin",
                    "password": "admin",
                    "services": {
                      "application-server": {
                        "server": true
                      },
                      "statistics-db": {
                        "server": true
                      },
                      "configuration-db": {
                        "server": true
                      },
                      "messaging-server": {
                        "server": true
                      },
                      "container-manager": {
                        "server": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Add vManage to cluster",
        "operationId": "addVmanage",
        "requestBody": {
          "description": "vManage cluster config",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage cluster config": {
                  "description": "vManage cluster config",
                  "value": {
                    "deviceIP": "10.0.1.38",
                    "username": "admin",
                    "password": "admin",
                    "genCSR": false,
                    "services": {
                      "application-server": {
                        "server": false
                      },
                      "statistics-db": {
                        "server": false
                      },
                      "configuration-db": {
                        "server": false
                      },
                      "messaging-server": {
                        "server": false
                      },
                      "container-manager": {
                        "server": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/tenancy/mode": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get vManage tenancy mode",
        "operationId": "getTenancyMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage tenancy mode": {
                    "description": "vManage tenancy mode",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Update vManage tenancy mode",
        "operationId": "setTenancyMode",
        "requestBody": {
          "description": "Tenancy mode setting",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Tenancy mode": {
                  "description": "Tenancy mode",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/tenantList": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get tenant list",
        "operationId": "getTenantsList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Tenant": {
                    "description": "Tenant",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/updateReplicationFactor": {
      "put": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Update replication factor for reach kakfa topic",
        "operationId": "updateReplicationFactorForKafkaTopics",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/userCreds": {
      "post": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Add or update user credentials for cluster operations",
        "operationId": "addOrUpdateUserCredentials",
        "requestBody": {
          "description": "User credential",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "User credential": {
                  "description": "User credential",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/vManage/details/{vmanageIP}": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get vManage detail",
        "operationId": "getVManageDetails",
        "parameters": [
          {
            "name": "vmanageIP",
            "in": "path",
            "description": "vManage IP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage detail": {
                    "description": "vManage detail",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clusterManagement/{tenantId}/connectedDevices/{vmanageIP}": {
      "get": {
        "tags": [
          "Cluster Management"
        ],
        "description": "Get connected device for vManage",
        "operationId": "getConnectedDevicesPerTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vmanageIP",
            "in": "path",
            "description": "vManage IP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Devices": {
                    "description": "Devices",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/container-manager/activate/{containerName}": {
      "post": {
        "tags": [
          "System - Container"
        ],
        "description": "Activate container on remote host",
        "operationId": "activateContainer",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Container image URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIp",
            "in": "query",
            "description": "Container host IP",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checksum",
            "in": "query",
            "description": "Container image checksum",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/container-manager/deactivate/{containerName}": {
      "post": {
        "tags": [
          "System - Container"
        ],
        "description": "Deactivate container on remote host",
        "operationId": "deActivateContainer",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIp",
            "in": "query",
            "description": "Container host IP",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/container-manager/doesValidImageExist/{containerName}": {
      "get": {
        "tags": [
          "System - Container"
        ],
        "description": "Get container image checksum",
        "operationId": "getChecksum",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Container image checksum": {
                    "description": "Container image checksum",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/container-manager/inspect/{containerName}": {
      "get": {
        "tags": [
          "System - Container"
        ],
        "description": "Get container inspect data",
        "operationId": "getContainerInspectData",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIp",
            "in": "query",
            "description": "Container host IP",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Container inspect data": {
                    "description": "Container inspect data",
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/container-manager/settings/{containerName}": {
      "get": {
        "tags": [
          "System - Container"
        ],
        "description": "Get container settings",
        "operationId": "getContainerSettings",
        "parameters": [
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostIp",
            "in": "query",
            "description": "Container host IP",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Container settings": {
                    "description": "Container settings",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dca/cloudservices": {
      "get": {
        "tags": [
          "System - Cloud Service"
        ],
        "description": "Get cloud service settings",
        "operationId": "getCloudSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cloud service setting": {
                    "description": "Cloud service setting",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dca/cloudservices/otp": {
      "get": {
        "tags": [
          "System - Cloud Service"
        ],
        "description": "Get cloud service OTP value",
        "operationId": "getOTP",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Cloud service OTP value": {
                    "description": "Cloud service OTP value",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "System - Cloud Service"
        ],
        "description": "Update cloud service OTP value",
        "operationId": "updatetOTP",
        "requestBody": {
          "description": "Cloud service OTP value",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Cloud service OTP value": {
                  "description": "Cloud service OTP value",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/entityownership/list": {
      "get": {
        "tags": [
          "System - Cloud Service"
        ],
        "description": "List all entity ownership info",
        "operationId": "listEntityOwnershipInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Entity ownership": {
                    "description": "Entity ownership",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/entityownership/tree": {
      "get": {
        "tags": [
          "System - Cloud Service"
        ],
        "description": "Entity ownership info grouped by buckets",
        "operationId": "entityOwnershipInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Entity ownership": {
                    "description": "Entity ownership",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/featurecertificate/certificate": {
      "get": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Get feature cert from cEdge device",
        "operationId": "getDeviceCertificate",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Device Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device feature cert": {
                    "description": "Device feature cert",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Upload feature cert for cEdge device",
        "operationId": "installFeatureCertificate",
        "requestBody": {
          "description": "Install feature cert request for cEdge",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Feature cert request": {
                  "description": "Feature cert request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/featurecertificate/devicecsr": {
      "get": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Get CSR from cEdge device",
        "operationId": "getDeviceCsr",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Device Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device CSR": {
                    "description": "Device CSR",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Create CSR for cEdge device",
        "operationId": "genDeviceCsr",
        "requestBody": {
          "description": "CSR request for cEdge",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "CSR request": {
                  "description": "CSR request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/featurecertificate/revoke": {
      "put": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Revoke feature cert from cEdge device",
        "operationId": "revokeFeatureCertificate",
        "requestBody": {
          "description": "Revoking feature cert request for cEdge",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Revoking feature cert request": {
                  "description": "Revoking feature cert request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/featurecertificate/syslogconfig": {
      "get": {
        "tags": [
          "Syslog - Feature Certificate"
        ],
        "description": "Get Feature CA state",
        "operationId": "getFeatureCaState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Feature CA state": {
                    "description": "Feature CA state",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/assignLicense": {
      "put": {
        "tags": [
          "MSLA"
        ],
        "description": "Update device subscription",
        "operationId": "editDeviceWithLicense",
        "requestBody": {
          "description": "Subscription and license",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Subscription and license": {
                  "description": "Subscription and license",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "MSLA"
        ],
        "description": "Create device subscription",
        "operationId": "createDeviceWithLicense",
        "requestBody": {
          "description": "Subscription and license",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Subscription and license": {
                  "description": "Subscription and license",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/devices": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Retrieve devices subscription",
        "operationId": "getDevices_1",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device subscription": {
                    "description": "Device subscription",
                    "value": {
                      "data": [
                        {
                          "configuredHostname": "vm11",
                          "chasisNumber": "a1d010e6-bd61-4fbd-8980-96f02db4d0b9",
                          "UUID": "a1d010e6-bd61-4fbd-8980-96f02db4d0b9",
                          "deviceModel": "vedge-cloud",
                          "configuredSystemIP": "172.16.255.21",
                          "licenseStatus": "Subscription Needed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/devices/assignmentdistribution": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Get device distribution ",
        "operationId": "getDeviceDistributionOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device distribution": {
                    "description": "Device distribution",
                    "value": {
                      "data": [
                        {
                          "totalDevices": 5,
                          "devicesAssignedLicense": 0,
                          "devicesWithoutLicense": 5,
                          "devicesWithValidLicense": 0,
                          "devicesWithInvalidLicense": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/devices/licenseanddeviceoverviewtable": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Get license device overview ",
        "operationId": "getLicenseandDeviceOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "License device overview": {
                    "description": "License device overview",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/devices/licensedistribution": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Get license distribution ",
        "operationId": "getLicenseDistributionOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "License distribution": {
                    "description": "License distribution",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/devices/subscriptiondistribution": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Get subscription overview ",
        "operationId": "getSubscriptionOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Subscription overview": {
                    "description": "Subscription overview",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/licenses/sync": {
      "post": {
        "tags": [
          "MSLA"
        ],
        "description": "Retrieve MSLA subscription/licenses",
        "operationId": "syncLicenses",
        "requestBody": {
          "description": "Sync license",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Sync license": {
                  "description": "Sync license",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Subscription license": {
                    "description": "Subscription license",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/msla/subscriptions": {
      "get": {
        "tags": [
          "MSLA"
        ],
        "description": "Retrieve subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Subscription": {
                    "description": "Subscription",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/newssh/connection/{deviceId}": {
      "post": {
        "tags": [
          "SSH"
        ],
        "description": "Create SSH session",
        "operationId": "createSSHSession",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device IP",
            "required": true,
            "schema": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SSH session request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "SSH session request": {
                  "description": "SSH session request",
                  "value": {
                    "width": -8,
                    "height": 1000,
                    "password": "dummy",
                    "username": "dummy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "SSH enabled devices": {
                    "description": "SSH enabled devices",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/newssh/devices": {
      "get": {
        "tags": [
          "SSH"
        ],
        "description": "Retrieve SSH enabled devices",
        "operationId": "findSSHEnabledDevices",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "SSH enabled devices": {
                    "description": "SSH enabled devices",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/newssh/disconnect/{deviceId}": {
      "post": {
        "tags": [
          "SSH"
        ],
        "description": "Destroy SSH session",
        "operationId": "destroySSHSession",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device IP",
            "required": true,
            "schema": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "SSH enabled devices": {
                    "description": "SSH enabled devices",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Get all NMS partners",
        "operationId": "getPartners",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Partners": {
                    "description": "Partners",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/aci/policy": {
      "get": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Get ACI definitions",
        "operationId": "getDefinitions_28",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "ACI policy": {
                    "description": "ACI policy",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/aci/policy/dscpmapping/{partnerId}": {
      "get": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Get DSCP policy",
        "operationId": "getDscpMappings",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "DSCP policy": {
                    "description": "DSCP policy",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Create an ACI definition entry",
        "operationId": "createDscpMappings",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ACI definition",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "ACI definition": {
                  "description": "ACI definition",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Action Id": {
                    "description": "Action Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Delete DSCP mapping",
        "operationId": "deleteDscpMappings",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Action Id": {
                    "description": "Action Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/aci/policy/events/{partnerId}": {
      "get": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Get ACI events",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Start time",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "End time",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "ACI events": {
                    "description": "ACI events",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/aci/policy/prefixmapping/{partnerId}": {
      "get": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Get prefix mapping",
        "operationId": "getDataPrefixMappings",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Prefix mapping": {
                    "description": "Prefix mapping",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Create data prefix mapping",
        "operationId": "setDataPrefixMappings",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Prefix definition",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Prefix definition": {
                  "description": "Prefix definition",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Action Id": {
                    "description": "Action Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/aci/policy/sequences": {
      "get": {
        "tags": [
          "Partner - ACI Policy Builder"
        ],
        "description": "Get data prefix sequence",
        "operationId": "getDataPrefixSequences",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Data prefix sequence": {
                    "description": "Data prefix sequence",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/config/{partnerId}": {
      "post": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Create SDA enabled device",
        "operationId": "createSDAConfig",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Device SDA configuration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device SDA configuration": {
                  "description": "Device SDA configuration",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device Id": {
                    "description": "Device Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/device/{partnerId}": {
      "get": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Get SDA enabled devices",
        "operationId": "getSDAEnabledDevices",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Devices list": {
                    "description": "Devices list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/device/{partnerId}/{uuid}": {
      "get": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Get SDA enabled devices detail",
        "operationId": "getDeviceDetails",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "Device uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Device detail list": {
                    "description": "Device detail list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/netconfconfig/{partnerId}": {
      "post": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Create SDA enabled device from Netconf",
        "operationId": "createSDAConfigFromNetconf",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Device SDA configuration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device SDA configuration": {
                  "description": "Device SDA configuration",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device Id": {
                    "description": "Device Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/site/{partnerId}": {
      "get": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Get SDA enabled devices",
        "operationId": "getSitesForPartner",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Sites": {
                    "description": "Sites",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/dnac/sda/vpn": {
      "get": {
        "tags": [
          "Partner - DNAC SDA API"
        ],
        "description": "Get Overlay VPN list",
        "operationId": "getVPNList_1",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "VPN list": {
                    "description": "VPN list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/vpn": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Get all VPNs",
        "operationId": "getVPNList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "VPN list": {
                    "description": "VPN list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/wcm/netconf/{nmsId}": {
      "post": {
        "tags": [
          "Partner - WCM Configs"
        ],
        "description": "Push device configs",
        "operationId": "pushNetconfConfigs",
        "parameters": [
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Netconf configuration",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "examples": {
                "Netconf configuration": {
                  "description": "Netconf configuration",
                  "value": []
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/{partnerType}": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Get NMS partners by partner type",
        "operationId": "getPartners_1",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Partners": {
                    "description": "Partners",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Register NMS partner",
        "operationId": "registerPartner",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partner",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Partner": {
                  "description": "Partner",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Partner Id": {
                    "description": "Partner Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/{partnerType}/map/{nmsId}": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "List mapped devices for the partner",
        "operationId": "getDevices_3",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Devices": {
                    "description": "Devices",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Map devices for the partner",
        "operationId": "mapDevices",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of devices",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "List of devices": {
                  "description": "List of devices",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Unmap all devices for the partner",
        "operationId": "unmapDevices",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/{partnerType}/unmap/{nmsId}": {
      "post": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Unmap a set of devices for the partner",
        "operationId": "deleteDeviceMapping",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of devices",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "List of devices": {
                  "description": "List of devices",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/partner/{partnerType}/{nmsId}": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Get NMS partners by partner type and Id",
        "operationId": "getPartner",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Partner": {
                    "description": "Partner",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Update NMS partner details",
        "operationId": "updatePartner",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Partner",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Partner": {
                  "description": "Partner",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Delete NMS partner",
        "operationId": "deletePartner",
        "parameters": [
          {
            "name": "partnerType",
            "in": "path",
            "description": "Partner type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nmsId",
            "in": "path",
            "description": "NMS Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Status": {
                    "description": "Status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sdavc/checksum": {
      "get": {
        "tags": [
          "System - Container"
        ],
        "description": "Get container image checksum",
        "operationId": "getChecksum_1",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Container image checksum": {
                    "description": "Container image checksum",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sdavc/cloudconnector": {
      "get": {
        "tags": [
          "SD AVC Cloud Connector"
        ],
        "description": "Get SD_AVC Cloud Connector Config",
        "operationId": "getCloudConnector",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "SD AVC Cloud Connector"
        ],
        "description": "Disable SD_AVC Cloud Connector",
        "operationId": "disableCloudConnector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "valueType": {
                    "type": "string",
                    "enum": [
                      "ARRAY",
                      "OBJECT",
                      "STRING",
                      "NUMBER",
                      "TRUE",
                      "FALSE",
                      "NULL"
                    ]
                  },
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "valueType": {
                      "type": "string",
                      "enum": [
                        "ARRAY",
                        "OBJECT",
                        "STRING",
                        "NUMBER",
                        "TRUE",
                        "FALSE",
                        "NULL"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "SD AVC Cloud Connector"
        ],
        "description": "Enable SD_AVC Cloud Connector",
        "operationId": "enableCloudConnector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "valueType": {
                    "type": "string",
                    "enum": [
                      "ARRAY",
                      "OBJECT",
                      "STRING",
                      "NUMBER",
                      "TRUE",
                      "FALSE",
                      "NULL"
                    ]
                  },
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "valueType": {
                      "type": "string",
                      "enum": [
                        "ARRAY",
                        "OBJECT",
                        "STRING",
                        "NUMBER",
                        "TRUE",
                        "FALSE",
                        "NULL"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sdavc/customapps": {
      "get": {
        "tags": [
          "System - Container"
        ],
        "description": "Displays the user-defined applications",
        "operationId": "getCustomApp_1",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Custom applications": {
                    "description": "Custom applications",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sdavc/task/{taskId}": {
      "post": {
        "tags": [
          "System - Container"
        ],
        "description": "Activate container",
        "operationId": "activateContainer_1",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Container task config",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Container task config": {
                  "description": "Container task config",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sdavc/test": {
      "post": {
        "tags": [
          "System - Container"
        ],
        "description": "Test SD_AVC load balancer",
        "operationId": "testLoadBalancer",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/serverlongpoll/event/poll/{partnerId}": {
      "get": {
        "tags": [
          "Partner - Registration"
        ],
        "description": "Retrieve registration change information",
        "operationId": "getDataChangeInfo",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Partner Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "description": "Event offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventNames",
            "in": "query",
            "description": "Event names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setting/configuration/webserver/certificate": {
      "get": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Retrieves Certificate Signing Request information",
        "operationId": "showInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "CSR detail info": {
                    "description": "CSR detail info",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Import a signed web server certificate",
        "operationId": "importCertificate",
        "requestBody": {
          "description": "Singed certificate",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Singed certificate": {
                  "description": "Singed certificate",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Certificate detail info": {
                    "description": "Certificate detail info",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Generate Certificate Signing Request",
        "operationId": "getCSR",
        "requestBody": {
          "description": "CSR signing request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "CSR signing request": {
                  "description": "CSR signing request",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "CSR": {
                    "description": "CSR",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setting/configuration/webserver/certificate/certificate": {
      "get": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Get certificate with alias name",
        "operationId": "DumpCertificate",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Key alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Certificate detail info": {
                    "description": "Certificate detail info",
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setting/configuration/webserver/certificate/getcertificate": {
      "get": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Get certificate for alias server",
        "operationId": "GetCertificate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Certificate detail info": {
                    "description": "Certificate detail info",
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setting/configuration/webserver/certificate/rollback": {
      "get": {
        "tags": [
          "Certificate Management - vManage"
        ],
        "description": "Rollback certificate with alias name",
        "operationId": "rollback",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Key alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Certificate detail info": {
                    "description": "Certificate detail info",
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/software/compliance/ip/origin/check": {
      "post": {
        "tags": [
          "Utility - Security"
        ],
        "description": "Block IP based on list",
        "operationId": "checkGivenIpList",
        "requestBody": {
          "description": "Device detail",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device detail": {
                  "description": "Device detail",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "IP validation status": {
                    "description": "IP validation status",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/certificate": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get edge proxy certificate",
        "operationId": "getProxyCertOfEdge",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Device Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Edge proxy certificate": {
                    "description": "Edge proxy certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Upload device certificate",
        "operationId": "updateCertificate",
        "requestBody": {
          "description": "Upload device certificate",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Upload device certificate": {
                  "description": "Upload device certificate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/certificate/wanedge/{deviceId}": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Add SSL proxy wan edge",
        "operationId": "setEnterpriseCert_1",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Cert state",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Cert state": {
                  "description": "Cert state",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/certificates": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Upload device certificates",
        "operationId": "uploadCertificiates",
        "requestBody": {
          "description": "Certificate file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Certificate file": {
                  "description": "Certificate file"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/csr": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get SSL proxy CSR",
        "operationId": "getSslProxyCSR",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Device Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "CSR": {
                    "description": "CSR",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/devicecertificates": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get certificate for all cEdges",
        "operationId": "getAllDeviceCertificates",
        "requestBody": {
          "description": "Device list",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device list": {
                  "description": "Device list"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Certificate": {
                    "description": "Certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/devicecsr": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get CSR for all cEdges",
        "operationId": "getAllDeviceCSR",
        "requestBody": {
          "description": "Device list",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device list": {
                  "description": "Device list"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "CSR": {
                    "description": "CSR",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/generate/csr/sslproxy": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "CSR request SSL proxy for edge",
        "operationId": "generateSslProxyCSR",
        "requestBody": {
          "description": "CSR request for edge",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "CSR request for edge": {
                  "description": "CSR request for edge"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/sslproxy/generate/vmanage/csr": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Generate CSR",
        "operationId": "generateCSR_1",
        "requestBody": {
          "description": "CSR request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "CSR request": {
                  "description": "CSR request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/list": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get SSL proxy certificate list",
        "operationId": "getSslProxyList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Certificate list": {
                    "description": "Certificate list",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/renew": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Renew device certificate",
        "operationId": "renewCertificate",
        "requestBody": {
          "description": "Renew device certificate request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Renew device certificate request": {
                  "description": "Renew device certificate request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/revoke": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Revoke device certificate",
        "operationId": "revokeCertificate",
        "requestBody": {
          "description": "Revoke device certificate request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Revoke device certificate request": {
                  "description": "Revoke device certificate request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/revokerenew": {
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Revoke and renew device certificate",
        "operationId": "revokeRenewCertificate",
        "requestBody": {
          "description": "Revoke device certificate request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Revoke and renew device certificate request": {
                  "description": "Revoke and renew device certificate request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/certificate": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get certificate state",
        "operationId": "getCertificateState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Certificate State": {
                    "description": "Certificate State",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/enterprise/certificate": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get enterprise certificate",
        "operationId": "getEnterpriseCertificate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Enterprise certificate": {
                    "description": "Enterprise certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Configure enterprise certificate",
        "operationId": "setEnterpriseCert",
        "requestBody": {
          "description": "Config enterprise certificate request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Enterprise certificate request": {
                  "description": "Enterprise certificate request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Certificate": {
                    "description": "Certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/enterprise/rootca": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get vManage enterprise root certificate",
        "operationId": "getVManageEnterpriseRootCertificate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Enterprise root certificate": {
                    "description": "Enterprise root certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Set vManage enterprise root certificate",
        "operationId": "setEnterpriseRootCaCert",
        "requestBody": {
          "description": "Set enterprise root CA request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Enterprise root CA": {
                  "description": "Enterprise root CA"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Enterprise root certificate": {
                    "description": "Enterprise root certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/vmanage/certificate": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get vManage intermediate certificate",
        "operationId": "getvManageCertificate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage intermediate certificate": {
                    "description": "vManage intermediate certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Set vManage root certificate",
        "operationId": "setvManageintermediateCert",
        "requestBody": {
          "description": "Set vManage intermediate CA request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage intermediate CA": {
                  "description": "vManage intermediate CA"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage intermediate certificate": {
                    "description": "vManage intermediate certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/vmanage/csr": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get vManage CSR",
        "operationId": "getvManageCSR",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage CSR": {
                    "description": "vManage CSR",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sslproxy/settings/vmanage/rootca": {
      "get": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Get vManage root certificate",
        "operationId": "getvManageRootCA",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage root certificate": {
                    "description": "vManage root certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "SSL Proxy Certificate Management - Device"
        ],
        "description": "Set vManage root certificate",
        "operationId": "setvManageRootCA",
        "requestBody": {
          "description": "Set vManage root CA request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "vManage root CA": {
                  "description": "vManage root CA"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vManage root certificate": {
                    "description": "vManage root certificate",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/system/reverseproxy/{uuid}": {
      "get": {
        "tags": [
          "System - Reverse Proxy"
        ],
        "description": "Get reverse proxy IP/Port mappings for controller",
        "operationId": "getReverseProxyMappings",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Device uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Device reverse proxy mappings": {
                    "description": "Device reverse proxy mappings",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "System - Reverse Proxy"
        ],
        "description": "Create reverse proxy IP/Port mappings for controller",
        "operationId": "createReverseProxyMappings",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Device uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Device reverse proxy mappings",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Device reverse proxy mappings": {
                  "description": "Device reverse proxy mappings",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant": {
      "get": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Lists all the tenants on the vManage",
        "operationId": "getAllTenants",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "List all tenants associated with a vSmart",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Tenant models": {
                    "description": "Tenant models",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Create a new tenant in Multi-Tenant vManage",
        "operationId": "createTenant",
        "requestBody": {
          "description": "Tenant model",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Tenant model": {
                  "description": "Tenant model",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Tenant model": {
                    "description": "Tenant model",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant/async": {
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Create a new tenant in Multi-Tenant vManage asynchronously",
        "operationId": "createTenantAsync",
        "requestBody": {
          "description": "Tenant model",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Tenant model": {
                  "description": "Tenant model",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant/{tenantId}": {
      "get": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Get a tenant by Id",
        "operationId": "getTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Tenant model": {
                    "description": "Tenant model",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Update a tenant in Multi-Tenant vManage",
        "operationId": "updateTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tenant model",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Tenant model": {
                  "description": "Tenant model",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Tenant model": {
                    "description": "Tenant model",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant/{tenantId}/delete": {
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Delete a tenant by Id",
        "operationId": "deleteTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tenant model",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Tenant model": {
                  "description": "Tenant model",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant/{tenantId}/switch": {
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Switch to a specific tenant",
        "operationId": "switchTenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vSession model": {
                    "description": "vSession model",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenant/{tenantId}/vsessionid": {
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Get VSessionId for a specific tenant",
        "operationId": "vSessionId",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "vSession model": {
                    "description": "vSession model",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantbackup/delete": {
      "delete": {
        "tags": [
          "Tenant Backup Restore"
        ],
        "description": "Delete all or a specific backup file stored in vManage",
        "operationId": "deleteTenantBackup",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "File name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Deleted file list": {
                    "description": "Deleted file list",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantbackup/download/{path}": {
      "get": {
        "tags": [
          "Tenant Backup Restore"
        ],
        "description": "Download a Backup File that is already stored in vManage",
        "operationId": "downloadFile",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Backup file stream": {
                    "description": "Backup file stream"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantbackup/export": {
      "get": {
        "tags": [
          "Tenant Backup Restore"
        ],
        "description": "Trigger a backup of configuration database and store it in vManage",
        "operationId": "exportTenantBackup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task status": {
                    "description": "Task status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantbackup/import": {
      "post": {
        "tags": [
          "Tenant Backup Restore"
        ],
        "description": "Submit a previously backed up file and import the data and apply it to the configuraion database",
        "operationId": "importTenantBackup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task status": {
                    "description": "Task status",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantbackup/list": {
      "get": {
        "tags": [
          "Tenant Backup Restore"
        ],
        "description": "List all backup files of a tenant stored in vManage",
        "operationId": "listTenantBackup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Backup file list": {
                    "description": "Backup file list",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantmigration/download/{path}": {
      "get": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Download tenant data",
        "operationId": "downloadFile_1",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Tenant data": {
                    "description": "Tenant data",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantmigration/export": {
      "get": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Export tenant data",
        "operationId": "exportTenantData",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantmigration/import": {
      "post": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Import tenant data",
        "operationId": "importTenantData",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantmigration/migrationToken": {
      "get": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Get migration token",
        "operationId": "getMigrationToken",
        "parameters": [
          {
            "name": "migrationId",
            "in": "query",
            "description": "Migration Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Migration token": {
                    "description": "Migration token",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantmigration/networkMigration": {
      "get": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Re-trigger network migration",
        "operationId": "reTriggerNetworkMigration",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Tenant Migration"
        ],
        "description": "Migrate network",
        "operationId": "migrateNetwork",
        "requestBody": {
          "description": "Network migration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "examples": {
                "Network migration": {
                  "description": "Network migration",
                  "value": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Task Id": {
                    "description": "Task Id",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantstatus": {
      "get": {
        "tags": [
          "Tenant Management"
        ],
        "description": "List all tenant status",
        "operationId": "getAllTenantStatuses",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Tenant status": {
                    "description": "Tenant status",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tenantstatus/force": {
      "post": {
        "tags": [
          "Tenant Management"
        ],
        "description": "Force tenant status collection",
        "operationId": "forceStatusCollection",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/util/logfile/appserver": {
      "get": {
        "tags": [
          "Utility - Logging"
        ],
        "description": "List content of log file",
        "operationId": "listLogFileDetails",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "log content": {
                    "description": "log content"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/util/logfile/appserver/lastnlines": {
      "get": {
        "tags": [
          "Utility - Logging"
        ],
        "description": "List last N lines of log content",
        "operationId": "listVManageServerLogLastNLines",
        "parameters": [
          {
            "name": "lines",
            "in": "query",
            "description": "Number of lines",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "log content": {
                    "description": "log content"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/util/logging/debuglog": {
      "post": {
        "tags": [
          "Utility - Logging"
        ],
        "description": "Test whether logging works",
        "operationId": "debugLog",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "logMessage",
                  "loggerName"
                ],
                "type": "object",
                "properties": {
                  "loggerName": {
                    "type": "string"
                  },
                  "logMessage": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/util/logging/level": {
      "post": {
        "tags": [
          "Utility - Logging"
        ],
        "description": "Set log level for logger",
        "operationId": "setLogLevel",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "logLevel",
                  "loggerName"
                ],
                "type": "object",
                "properties": {
                  "loggerName": {
                    "type": "string"
                  },
                  "logLevel": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/util/logging/loggers": {
      "get": {
        "tags": [
          "Utility - Logging"
        ],
        "description": "List loggers",
        "operationId": "listLoggers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "examples": {
                  "Loggers": {
                    "description": "Loggers",
                    "value": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiReKeyDevice" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          }
        }
      },
      "ApiReKeyDeviceList" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiReKeyDevice"
            }
          }
        }
      },
      "SmartAccountModel" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "validity_string" : {
            "type" : "string"
          },
          "organization_name" : {
            "type" : "string"
          },
          "env" : {
            "type" : "string"
          }
        }
      },
      "CreateDeviceParams" : {
        "type" : "object",
        "properties" : {
          "deviceIP" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "personality" : {
            "type" : "string"
          },
          "generateCSR" : {
            "type" : "boolean"
          },
          "protocol" : {
            "type" : "string"
          },
          "port" : {
            "type" : "string"
          }
        }
      },
      "PropertyDefinition" : {
        "type" : "object",
        "properties" : {
          "samples" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "SchemaDefinition" : {
        "type" : "object",
        "properties" : {
          "countOfUniqueuVertexAndEdgeObjectsCreated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "countOfVertexAndEdgesRegisteredWithDeviceDataManager" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vertexDefinitionsFoundInDBWithData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VertexDefinition"
            }
          },
          "vertexDefinitionsNotFoundInDB" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "vertexDefinitionsFoundInDBWithoutData" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "vertexDefinitionsNotRegisteredWithDeviceDataManager" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "vertexDefinitionsForDataCollection" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "VertexDefinition" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "inEdges" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "outEdges" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            }
          }
        }
      },
      "ThreadPoolDefinition" : {
        "type" : "object",
        "properties" : {
          "threadPoolName" : {
            "type" : "string"
          },
          "threadPoolSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "consumerClass" : {
            "type" : "string"
          },
          "consumerMethod" : {
            "type" : "string"
          }
        }
      },
      "ThreadPoolsDefinition" : {
        "type" : "object",
        "properties" : {
          "totalThreadCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "threadPools" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreadPoolDefinition"
            }
          }
        }
      },
      "Node" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          },
          "serialno" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "DataCenter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "nmsPersonality" : {
            "type" : "string"
          },
          "dcPersonality" : {
            "type" : "string"
          },
          "mgmtIPAddress" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Node"
            }
          }
        }
      },
      "DataCenterRegistration" : {
        "type" : "object",
        "properties" : {
          "dataCenters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataCenter"
            }
          },
          "disasterRecoverySettings" : {
            "$ref" : "#/components/schemas/DisasterRecoverySettings"
          },
          "host" : {
            "$ref" : "#/components/schemas/Host"
          },
          "vbonds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Node"
            }
          }
        }
      },
      "DisasterRecoverySettings" : {
        "type" : "object",
        "properties" : {
          "drPaused" : {
            "type" : "boolean"
          },
          "pauseReplication" : {
            "type" : "boolean"
          },
          "delayThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startTime" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pauseDR" : {
            "$ref" : "#/components/schemas/DisasterRecoverySettings"
          }
        }
      },
      "Host" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "ifname" : {
            "type" : "string"
          },
          "dataCenterName" : {
            "type" : "string"
          },
          "dcPersonality" : {
            "type" : "string"
          },
          "serialno" : {
            "type" : "string"
          }
        }
      },
      "EntityOwnershipInfo" : {
        "type" : "object",
        "properties" : {
          "entityName" : {
            "type" : "string"
          },
          "bucket" : {
            "type" : "string"
          },
          "owner" : {
            "type" : "string"
          }
        }
      },
      "AwsIamCredentials" : {
        "type" : "object",
        "properties" : {
          "roleArn" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "AwsKeyCredentials" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string"
          },
          "secretKey" : {
            "type" : "string"
          }
        }
      },
      "AzureCredentials" : {
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string"
          },
          "secretKey" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "cloudTenantId" : {
            "type" : "string"
          }
        }
      },
      "MultiCloudAccountInfo" : {
        "type" : "object",
        "properties" : {
          "cloudType" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          },
          "awsIamCredentials" : {
            "$ref" : "#/components/schemas/AwsIamCredentials"
          },
          "awsKeyCredentials" : {
            "$ref" : "#/components/schemas/AwsKeyCredentials"
          },
          "azureCredentials" : {
            "$ref" : "#/components/schemas/AzureCredentials"
          },
          "cloudGatewayEnabled" : {
            "type" : "boolean"
          },
          "awsCloudGatewayWithTvpcEnabled" : {
            "type" : "boolean"
          },
          "hostVpcEnabled" : {
            "type" : "boolean"
          },
          "azO365Enabled" : {
            "type" : "boolean"
          },
          "credType" : {
            "type" : "string"
          },
          "accountCredentials" : {
            "type" : "string"
          },
          "regionList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TenantModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "idpMetadata" : {
            "type" : "string"
          },
          "oldIdpMetadata" : {
            "type" : "string"
          },
          "spMetadata" : {
            "type" : "string"
          },
          "subDomain" : {
            "type" : "string"
          },
          "getvBondAddress" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          },
          "tenantId" : {
            "type" : "string"
          }
        }
      },
      "CreateTenantModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "idpMetadata" : {
            "type" : "string"
          },
          "oldIdpMetadata" : {
            "type" : "string"
          },
          "spMetadata" : {
            "type" : "string"
          },
          "subDomain" : {
            "type" : "string"
          },
          "getvBondAddress" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          }
        }
      },
      "UpdateTenantModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "idpMetadata" : {
            "type" : "string"
          },
          "oldIdpMetadata" : {
            "type" : "string"
          },
          "spMetadata" : {
            "type" : "string"
          },
          "subDomain" : {
            "type" : "string"
          },
          "getvBondAddress" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          }
        }
      },
      "Header" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HeaderElement"
            }
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "HeaderElement" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "parameterCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValuePair"
            }
          }
        }
      },
      "NameValuePair" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "TenantListModel" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/Header"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TenantModel"
            }
          }
        }
      },
      "DeleteTenantModel" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string"
          }
        }
      },
      "VSessionIdModel" : {
        "type" : "object",
        "properties" : {
          "VSessionId" : {
            "type" : "string"
          }
        }
      },
      "ControlStatus" : {
        "type" : "object",
        "properties" : {
          "controlUp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "controlDown" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partial" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SiteHealth" : {
        "type" : "object",
        "properties" : {
          "fullConnectivity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partialConnectivity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noConnectivity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TenantStatus" : {
        "type" : "object",
        "properties" : {
          "tenantId" : {
            "type" : "string"
          },
          "tenantName" : {
            "type" : "string"
          },
          "controlStatus" : {
            "$ref" : "#/components/schemas/ControlStatus"
          },
          "siteHealth" : {
            "$ref" : "#/components/schemas/SiteHealth"
          },
          "getvEdgeHealth" : {
            "$ref" : "#/components/schemas/VEdgeHealth"
          },
          "getvSmartStatus" : {
            "$ref" : "#/components/schemas/VSmartStatus"
          }
        }
      },
      "TenantStatusListModel" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/Header"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TenantStatus"
            }
          }
        }
      },
      "VEdgeHealth" : {
        "type" : "object",
        "properties" : {
          "normal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "warning" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VSmartStatus" : {
        "type" : "object",
        "properties" : {
          "up" : {
            "type" : "integer",
            "format" : "int32"
          },
          "down" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    }
  }
}